openapi: 3.0.0

info:
  title: Chronicle test API
  description: awesome chronicle test api
  version: 0.0.0

paths:
  # [GET] users
  /api/users:
    get:
      tags:
        - users
      summary: Find All Users
      parameters:
        - in: query
          name: email
          schema:
            type: string
          description: user email to find
        - in: query
          name: current_page
          schema:
            type: number
          description: current page of pagination
        - in: query
          name: take
          schema:
            type: number
          description: how many item per page you want to get
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'
  # [GET] users/id
  /api/users/{id}:
    get:
      tags:
        - users
      summary: Find User By Id
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [PUT] users/id
    put:
      tags:
        - users
      summary: Update User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
        - in: body
          description: user object
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
                example: joko
              last_name:
                type: string
                example: widodo
              sex:
                type: string
                example: m
              date_of_birth:
                type: string
                example: 2023-03-24T06:43:55.066Z
              address:
                type: string
                example: kp waringin jaya
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

    # [DELETE] users/id
    delete:
      tags:
        - users
      summary: Delete User By Id
      parameters:
        - name: id
          in: path
          description: user Id
          required: true
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

  # [POST] login
  /api/auth/login:
    post:
      tags:
        - auth
      summary: Login to application
      parameters:
        - name: body
          in: body
          description: user email and password
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: zenhuwmank@gmail.com
              password:
                type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  /api/auth/logout:
    post:
      tags:
        - auth
      summary: Logout to application
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'


  /api/auth/register:
    post:
      tags:
        - auth
      summary: Register user
      parameters:
        - in: body
          description: user object
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
                example: joko
              last_name:
                type: string
                example: widodo
              sex:
                type: string
                example: m
              date_of_birth:
                type: string
                example: 2023-03-24T06:43:55.066Z
              address:
                type: string
                example: kp waringin jaya
              email:
                type: string
                example: zenhuwmank@gmail.com
              password:
                type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'

  /api/auth/change-password:
    post:
      tags:
        - auth
      summary: Change password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_password:
                  type: string
                old_password:
                  type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'